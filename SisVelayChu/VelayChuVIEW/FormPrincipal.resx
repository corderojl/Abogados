<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABsPkAAoHh6Un9QU+5vPUH/b0pM42pbWUiNbG06f1tdkIl1dDekgoMA4MrKAOLKygAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJOHiQC5mJgAvqWlDXZERcFtIyb/bSIm/3JD
        RcuScXGKZzY55F0pLPqFcG6E8+PiF////wCfg4YAl3p9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIltawCPcnEAAAAAAHJQUSFjKizjdSUm/24nJ/98UFCrajU45GsmK/+QWFvOglRUomc5
        O81zS06QrJOVG41sbwCdcXMAhFZZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDV2ACMcnAAgGRiC5Bu
        bXCJZ2dsbDEx7XQkJv9vJCf/f0xOvW02N9h9MjX/j1NU/GkoKf9kISX/Yi8z9otzc2BYPDkF9d7bApJt
        bwCgeHsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+/8AGQAAAHNMTWNgKSr/dkZIwoBNTctzIyf/dCMn/3M6
        PdqDUVG1biYo/28kJv9wIyX/dTs9/6WBg8lxQEKqYCgsyH9MUWxSAAIApXh7AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANa5
        uQDStLUAxqSlAOLU1gl5Rkm/cyMn/24qLOiAVlaXbiks93QkJ/9rKiz3iltbo24uL/RxIyb/byos/6+P
        jv+PZWb+aSMn/2wjKP9xNDngp4SHJaaAgwAAAAAAoX+FAKKBhwDBnKEA+NbaAPXT1wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALucmwDLrq4A//T1Bta3uBuSenoQZSksyXUk
        J/9yJCj/f0tOtW86PL1uJSb/cCUo/3dERLNqMDHHbiEk/41cXP+XcnH/bSIm/3ckKf9vJSn/Yiot9m1M
        TTpiNjgATiYoAKuNkgCzlZoKzaywH////wd0SEsAXC8yAHtXWADUuboAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADHqagA9+DdBYZfYIJ9TE/hhVtceW86O8FsJSf/ciQn/3Q0OfOMYGCVZSYn7nQj
        Jv9vNjjXekhJwHMrLv+eamr/cy4x/3IkJ/9yJCf/byYp/31OTrJjPDxqVSgqcWA7PghlMzoAdExSb35K
        UedqOkCnfFhcjI1oa1B5Vlgp2MDAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi2ZlAIxp
        aCZsMjTmbSEl/28qLeZ7UE+Zbiks+W8lJ/9uJSn/fEFCqV8rK59wJCb/bTAz5nM+Qal5MjX/gT4//3Qi
        Jf9yJSf/ZiYo/3pJSrmRZ2aTaSss9GckKPliODlQbDQ4AFYkKZJyJi//bSgu/2YpLv9iJSr3aDM27ntR
        U+8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBDQwByR0dKbior+nclJ/9wJSf/aT08sHQ4
        PMJuJCj/dSUn/2slJ+Z7TU17bisr7WgsL+VxNTqhcScq/3MmKf92Jij/cSUn/3dBQ8uOaGmRbDI09nMj
        Jv9tJij/ZD07f7WcnSx9Sk3Gmk5T/6tgZP+iU1j/l0dM/4E3O/9pKiz/AAAAAAAAAAAAAAAAAAAAANzH
        xQDeyMYA3svJAMizswBsPj8AZjc4TGspKfxzJib/bSYn/2UvL/B/U1SUbiUq8HMlJv9wJSf/cDU4r3lG
        RrJoODrFfUJFuHElKP93JCf/cSUn/3EwMd+SZGSKbjE0624jJ/9sJCf/bDc3zHxQUHR5UVPdj1pc/5pQ
        VP+tZmn/r2hq/7Vrbv+nXmH/ez1A/+jQzwC0lZUAekxMAJ1xcQB5R0gA////Bf///wXWvr8A////AINh
        YkRpKyzwcCYn/3AkJv9qJSf/gU5OwYBGSMZsJSf/dCQn/2wpLPV1UVNqhmNjZGssLuBxJCb/dSQm/3Mt
        MP6RYGKlcDY32G4kJf9yIyf/aiwx7m5HSGhoLS/Ye0ZH/4ZRU/+USk7/oVpd/6BbW/+lXV3/mFFU/3Q3
        POv///8ExayrGIRaWh2sgoJfckFCcXlMTKKVdXZj////BJBjZ4F4U1WfZyotom4jJ/90Iyf/cyQn/3At
        L+uSZWaXci0w+XQjJv9sIyf/d0pOq24+QM5uJSj/cyUn/20iJP+bbGz+k2lp62ohJf50Iyf/ciUq/4hb
        XKp3Q0WlZyEl/4JMTf+BTE3/mE5S/6FaXf+fWlr/olpa/5BKTf9jJCnLZDw8nX1OTtxlLC7haC4v+2sp
        K/9rJCb/ZSswkIhUVi50MDTwZCQp6WU6PV9wMDXgdSMo/3EmJ/9tJyn/i1tgeH1DRbdwJCf/cCMn/4VV
        WMt6PUHldCMn/3EjJv91OTv/q4aG/28vMf9zJCf/ciIn/38/Q+GXcnGZbi8x+3AhJf+NVVb/hEtN/5JJ
        TP+bVFf/nFdY/6FaW/+PSUz/aS4yzGAoKf91Ky3/gDk9/4tGSv+cU1b/k0dL/3pARa+JTlCHbiMm/2gp
        LfZ8WFtrkmtsgmMpKulvJSb/cCUo/X9PVIeZc3N+bjQ18mMlJ/92RUeaciww4nIjJ/9tIiT/kGRl/4pS
        VP9vISX/diMn/28rLv6UaWqgcjg41W4kJv9xISX/j1pb/4JISf+OREj/kUtN/5FMTf+WT1H/hT9C/3Q+
        Qs10Ojv/p1xd/7hpb/+2aXD/tWlu/51SV/9+RkrHcUFCmmQtLv+DT1K8ekdLtnRHSbt6UU+JZykq/2wt
        L+dyR0mUdUdIwZ13dZKJYF+yiFhYn24nKv1vJij/di4w/5tpa/91KS3/cCQn/28jJ/9/RUjSfk5Oo28k
        J/9zJCf/cSIm/4pYWf99QkP/kEZK/5FLTv+PS03/kkxN/4A6Pv96RUm8eENE/ppWV/+qXmL/p1tf/6Vb
        Xv+WTU//dDo7zJ5/flqFYmJhlmttj28sL/NnJyn/glZUpnxbWouObGuPcDY3vmQnKP9/VVPNkmlpoGkt
        L+hxJCf/cCQn/4Q+P/+GRkn/ciIm/3IkJ/9rKy75i1ZYmG8sLuRyJCb/dSQn/3AjJ/+NXV7/ej5A/5JI
        S/+RS07/jktN/5FMTf99Nzz/XCInjGwvMtiUS03/n1lb/51ZWv+gW1v/mFFR/3E2Nth8UFLLaCYvym0s
        MfZvJCb/dSQn/2ooK/V/SEyjfkVJt3IoK/91JSf/ayQn/2UkKP9vIyj/eCQo/3UkJ/9/NDb/cSsu/3Ak
        J/93Iyf/djs+woBISbBuJSf/dCYn/3UlKf9xJCn/mWZn/3w9QP+TSU3/kUtO/45LTf+QTE3/fDc7/2Mq
        L4pqKi7Lk0lM/59bXf+bWFv/nFha/5VOUP9zNTbacTU4wnEhKP9yIyf/dCQn/3cjKP9yIyj/bSIm/28i
        Jv91JCb/diMn/3QkKP9xJCn/dCQo/3gkKP93JCf/dSUo/3ElJ/9wJCj/bSYr9ItcXJhyMzPvcyQl/3Um
        J/92Jif/cCUo/5hnZ/9+Oz7/k0lM/5BKTf+PS07/kEtO/3w3Of97QkeKdTg8zIpCRf+WUlT/kU1R/5BM
        T/+NRUj/eTw+7XlAQctyIyb/cyQn/3UkJ/91JCf/cyQn/3IkJ/90JSf/dCYn/3MkJ/9zJCj/dCQo/3Qk
        J/91JCf/cyUo/3UkKP93JSj/cSMn/3tDRtGFVVW7cCYo/3YmJ/92Jif/diYn/3AoKf+PYWL/fjk8/5NK
        Tv+QS07/kUxP/5FLT/97Njj/kVleg4dNUcyCOz3/j0tN/49LTv+OS07/jkdK/3U3Oe2ASUnMcyQo/3Mk
        J/90JCf/diUn/3UkJ/9yJCf/ciUn/3UlKP9yJCf/cyQn/3YjKP93JCf/cyQn/3ElKP90JSj/dyMn/3In
        K/mCVVSYbS0v43QkJ/92Jif/diYn/3YmJ/9zLC3/j2Nk/304O/+SS07/kEpN/49KTv+QSk3/dzEz92Yp
        LVF4Oz6kfzg6/5BLTv+OSk3/jktO/49IS/9zMTPsfUdIv3IkKP9zJCf/dCUn/3YmJ/93JSj/dyQo/3ck
        KP94Iyf/dCQn/3QlKP92JSj/diQo/3IlKP91JSj/dyUo/3AkJ/9yNDXDiVVVsXIlKf9zJSf/diYn/3Ym
        J/92JSb/dTAx/5doaP99ODv/kUpN/5BKTf+QSk7/j0lM/3YxM/VkLS9JYyMmiH03Of+RS07/jkpN/45L
        Tv+PR0v/dTE07mUvL59uIyb9dCQn/3UlJ/9zJif/cSYo/3IjJ/92Iyj/dyMn/3ckJ/90JCf/cyQn/3Mk
        J/9yJCf/eCMn/3ckKP9iJSfxf1JRhns5O+5zISb/cyQn/3YmJ/91JSb/dSUm/3YzNP+YaGj/gDk8/5BM
        T/+SS07/kEpO/45IS/93NDX1fE1OSXk+QIp9ODr/kkxP/49LTv+PS07/kUpN/304O/uATU3CbyYo+3Ql
        KP92JSj/bico/2EnJ/5jKCv3ZSYp/WklKP91JSj/dyQo/3QlJ/9zJCf/cyUn/3gkJ/9sJSf/YTIypWkt
        Lo5wJSj/cyUp/3UlJ/93Jyj/dyco/3YmJ/93Nzf/jmFh/4I6Pv+QTE//k0pO/5BKTv+NRkr/ezg59Zt0
        c0iWXWCLfDg6/5FLTv+OS07/j0tO/5JLTv99Njn7gE1NxHIpLPt0JCf/dSQn/2koKfhwRUSSWTQ0Rn1V
        VntjNTTebCUn/3gjJ/92JSb/diQn/3MkJ/9wIyb/bTY14pFpaZBsKy3vcyQn/3IkKP91JSf/dSUm/3Ym
        J/91JCX/ezs7/4ZZWf+EOz//j0xP/5NKTv+RSk7/jUZK/3QtL997Tk0lh1ZYbnczNfyRSkz/jktN/49L
        Tf+RS03/ezU3+39LTL5zKy/6cyQn/3UjJ/9zNTbQfldYllQmJ9FyQUCuh11cbHI1OOh3Iif/dSUm/3cj
        J/9wIyb/bS0u9oFWVH1zOjzRbiQn/3UkJ/9wJCj/dCQo/3YkKP92Iyf/dCIl/4BCRP+MWlv/hDw//49M
        Tv+RSk7/j0tO/4tFR/9wKy3XXCwuGU8mJ0lzMDP1kUtM/5BMTf+QTE3/kU1O/3o3OP1oLzKebiUq7HUk
        J/90Iyf/eT8/0nBAQsNtIyb/bSUm/286O8aGVVqmcCUq/3YlJv9zIyb/Zicp+IVaWZ16S0u1aCUm/3Ik
        Jv92JCj/dSUp/3ElKf9yJSn/dCUp/3IkKP94Oz3si05R7odAQv+RTE7/j0pO/41MT/+LREX/dDM32INb
        XhptRkdJdTM29ZBKS/+QTE3/kExN/5FNTv99Ojv/gE5QxXAqLux1JCf/ciMn/3MxM+qBUVOmbyYp/HEm
        Jv9rKSz+ek9RlV8nKdZuJCX/Zior/npRT5x+S0uaaygq/mslJ/9xJSf/dyQo/3ckJ/9zJif/ciYn/3Im
        J/9vIyb/ZCgp2XQ3Od2IQ0T/kUxO/5BKTv+NTE//iEFD/3w/Qti7l5oalnFxSnk5O/aOSEn/kExN/5BM
        Tf+RTU7/fzw9/3xJS8xzMTTtdSMm/3MkKP9vJin9eUNFlHIvMeRyJSb/cCYo/2kxMr6NaGZ/hVVUy5lw
        b5qRY2Kibykr+XEkJ/90JCf/dCQn/3MkJ/91JSf/dSYm/3IlJf9uJCb/cisv/3Y9QM1sLzLaiURG/5JM
        Tv+RS07/j0tP/4ZAQv9uMTS6waepC6aCgj12ODrujEZH/49LTP+QTE3/kU1O/4A8Pf91QkPLeDk87HYj
        J/90JCj/cSQo/3g+P8iCSkrIciUn/3ImJ/9sJyn+gFBQzK6NirSJW1vFbysu/HAkJ/92JSj/dCQo/3Uk
        KP92JSj/cyQm/20lJ/9uLS/ngk5Qr5VhZF+xgYVCaSks0YtGSP+TS03/kUpO/5JLTv+FP0H/XyMmpgAA
        AAFfLjEbaywt2ItHSP+QTE3/kExN/5FNTv+EP0D/ZSsutGoqLdJ1Iyb/dCMn/3IkJ/9vLjDph1dWsHEn
        Kf90JSb/cyMn/28kJ/9nJyr/aCUn/3YjJ/90JCf/cyMm/24kKP90JCj/byIn/2oyNPd+UlOomGtsNP//
        /wODTlEAnXd4KnI1OOqIQEL/j0ZI/49HS/+USk7/gz0+/202OKfb//8BgVBSGnAxM9iJRUb/kExN/5BM
        Tf+RTU7/iEFC/3o+QdJuMDLVdSQn/3QlKP90JCf/bigq+35QT6VtKCrxdiMn/3QkJ/97JCj/eiQo/3Ml
        J/92Iyf/dyMn/3IkJ/9wJCf/aygr/3VAQ8qUcHFU+/b0B5VlZwD///8Ah19gAIZeXzhyMTX0fzQ2/4M4
        O/+DOz//ij1C/3s1Nv+ATE2p////AbiOkBt6Pj/Zh0JD/5FMTf+QS0z/kUxN/4pCRP97P0Pecj1A3Woi
        Jv9pIib/biEl/2olKP94SUiraSst4nMkJ/9zJSj/ciUn/3MlJ/90Jif/cSYn/3MkJ/9xIyf/bCot/4VV
        V6+3mJgfe1NUANW9vQDTurkAAAAAAHlSUgB6UlI0aS0w82ojJv9wKCv/cysw/3suM/9yLC//ekVHjQAA
        AAC6qKUNcTU1v4pAQv+UTE3/kUxM/5FNTf+LQ0b/bzQ5118+QHNKFRp9VyYqhXtKTM5eKy7odU5Pu2U0
        NcJsJSb/dSco/3QlJv9yJif/dCYm/3QlJ/9vJCf/YyYp/XBISpvVuLoUn3l7AGI2NwAAAAAAAAAAAAAA
        AACRbm8AlHFxDW1CRG+DVFbJbDQ33WAjJ+ZqLC7/XyUp/1ElKW1WJysAAAAAAWAhIqaFPkH/j0xP/41L
        Tv+OTE7/k0ZJ/3ApL9FJHCANWCAlAAAAAADLr7ERhWdpJ6iUlk9ySkppZCsr+2cjJv9tIyb/byQn/3Mi
        Jv9vIib/aCsv/3pMTaSMbm4Mm3R2AJRsbgAAAAAAAAAAAAAAAAAAAAAAiWVlAJd0dQAfAAAA+uHiEHtS
        VRWEXV4sg1xdaGM/QYGIcnRSf2dpAHXYxwFrLzKnhDtA/5JLUP+PSU7/jUdM/45CRf96NDfnonl7KaZ7
        fQD73d4As5CRAHtYWwCiiIkAsYmJCoJeX22NZmjCjF1gxIZUV8SCTE/Fh1VYu39VV2fOsbEUlXJzAG5E
        RQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5398A//j3ANS0tQB3Sk0Ae09RAIVdXQAAAAAA////Bf//
        /wD///8BfUdKqX82Ov+LQET/hj1A/4M7Pv98ODn/cjY39JJrbTiUbW4AAAAAAAAAAAAAAAAArIaGALaU
        lAAAAAAA////B//w8wjoz9IIybCxCP/t7QYwAAAAw6KjALuamgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg0dEA4NHSAN/S0gDg0dIAAAAAAHlISpN2LTD/fzM2/3kx
        M/9zLi//bigp/2osL/Z9UlU4flJWAAAAAAAAAAAAAAAAAAAAAADZw8QA28XGAMqusAC/m50Ar4eKAKB2
        eAC2kJIA1LO0AM6urwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFUiJQBOISNsZCMm/2omKf9oKiz/YSUm7XQ+QOt9TVGwsoyRH7WP
        kwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAByT1EAdVVXbntTVu9rPD+gl21vi3ZISjikgoIr8d7fD6WAgwBwQEUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIQACEEAAAAQgAAKUQAAABCA
        AABBAAAAEIAAABAAAAAQgAAAEAAAABCAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAA
        AAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAAAAABAFKUQAAAAAEKUpRAAAAAAQpSlEA
        AAA=
</value>
  </data>
</root>